When would you want to use a remote repository rather than keeping all your work
local?

Ideally, when am not sure if I'll have access to my local computer always or if I need to collaborate with other team members.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

As it may introduce changes in code base that effects WIP tasks in my local repository. Hence, making work in-efficient for me.

Describe the differences between forks, clones, and branches.  When would you use one instead of another?

Clone is process of copying the git repository from one location to another. Forks is a special case of clone where copying is done from one 
github location to another. Branches is a way to split commits into different buckets, for better organization of work.

Forks are better to use when you want to create a copy of someone else's github repository with your account.

What is the benefit of having a copy of the last known state of the remote stored locally?

That allows one merge remote branch and local branch on local computer, before pushing the merged state to Github.

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?

I would probably use a shared drive with a versioning system for code files. Making changes in the master would be easier, but control would become very loose.

When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?

Direct changes when working alone. Through branch when working in team, and would want peer review before affecting changes in master.
