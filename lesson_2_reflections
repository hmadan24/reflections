What happens when you initialize a repository? Why do you need to do it?

It converts the directory into a git directory which can track the history of files present in the directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It provides an intermediate space that allows developer to select only those files, which it wants to commit and not the entire working directory.

How can you use the staging area to make sure you have one commit per logical change?

Staging can act as a review stage before the changes are actually committed. This will help reduce wrong commits.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When you're experimenting with experimental versions of the code base that aren't small enough to easily manage within the main branch.

How do the diagrams help you visualize the branch structure?

They show through diagram where exactly the branches parted way. They also show branch heads, and position of current head.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A new commit is created with two ancestors, each being the latest one in the two concerned branches. The destination branch label is moved to this newly created commit.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

Pro: Reduces lots of menial task where merge decision is pretty straight-forward
Con: Automatic merging may not be always correct, or may prompt obvious merge decision. This is because it's not intelligent but more rule based.